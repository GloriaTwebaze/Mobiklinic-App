{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { withTheme } from \"../config\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MAX_HEIGHT = 300;\n\nvar BottomSheet = function (_Component) {\n  _inherits(BottomSheet, _Component);\n\n  var _super = _createSuper(BottomSheet);\n\n  function BottomSheet(props) {\n    var _this;\n\n    _classCallCheck(this, BottomSheet);\n\n    _this = _super.call(this, props);\n\n    _this.onLayout = function (event) {\n      return _this.setState({\n        listHeight: event.nativeEvent.layout.height\n      });\n    };\n\n    _this.state = {\n      listHeight: undefined\n    };\n    return _this;\n  }\n\n  _createClass(BottomSheet, [{\n    key: \"render\",\n    value: function render() {\n      var listHeight = this.state.listHeight;\n      var _this$props = this.props,\n          isVisible = _this$props.isVisible,\n          modalProps = _this$props.modalProps,\n          children = _this$props.children;\n      var maxHeight = listHeight < MAX_HEIGHT ? listHeight : MAX_HEIGHT;\n      return _jsx(Modal, _objectSpread(_objectSpread({\n        animationType: \"slide\",\n        transparent: true,\n        visible: isVisible\n      }, modalProps), {}, {\n        children: _jsx(SafeAreaView, {\n          style: styles.safeAreaView,\n          children: _jsx(View, {\n            style: styles.modalView,\n            children: _jsx(View, {\n              style: ([styles.listContainer], {\n                maxHeight: maxHeight\n              }),\n              onLayout: this.onLayout,\n              children: _jsx(ScrollView, {\n                children: children\n              })\n            })\n          })\n        })\n      }));\n    }\n  }]);\n\n  return BottomSheet;\n}(Component);\n\nvar styles = StyleSheet.create({\n  safeAreaView: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.2)'\n  },\n  modalView: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  listContainer: {\n    backgroundColor: 'white'\n  }\n});\nBottomSheet.defaultProps = {\n  modalProps: {},\n  isVisible: false\n};\nBottomSheet.propTypes = {\n  modalProps: PropTypes.object,\n  isVisible: PropTypes.bool\n};\nexport { BottomSheet };\nexport default withTheme(BottomSheet, 'BottomSheet');","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/node_modules/react-native-elements/src/bottomSheet/BottomSheet.js"],"names":["React","Component","withTheme","PropTypes","MAX_HEIGHT","BottomSheet","props","onLayout","event","setState","listHeight","nativeEvent","layout","height","state","undefined","isVisible","modalProps","children","maxHeight","styles","safeAreaView","modalView","listContainer","StyleSheet","create","flex","backgroundColor","flexDirection","defaultProps","propTypes","object","bool"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,SAASC,SAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,GAAnB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,UAACC,KAAD;AAAA,aACT,MAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyBC;AAAvC,OAAd,CADS;AAAA,KAPQ;;AAEjB,UAAKC,KAAL,GAAa;AACXJ,MAAAA,UAAU,EAAEK;AADD,KAAb;AAFiB;AAKlB;;;;WAKD,kBAAS;AACP,UAAQL,UAAR,GAAuB,KAAKI,KAA5B,CAAQJ,UAAR;AACA,wBAA4C,KAAKJ,KAAjD;AAAA,UAAQU,SAAR,eAAQA,SAAR;AAAA,UAAmBC,UAAnB,eAAmBA,UAAnB;AAAA,UAA+BC,QAA/B,eAA+BA,QAA/B;AACA,UAAMC,SAAS,GAAGT,UAAU,GAAGN,UAAb,GAA0BM,UAA1B,GAAuCN,UAAzD;AAEA,aACE,KAAC,KAAD;AACE,QAAA,aAAa,EAAC,OADhB;AAEE,QAAA,WAAW,EAAE,IAFf;AAGE,QAAA,OAAO,EAAEY;AAHX,SAIMC,UAJN;AAAA,kBAME,KAAC,YAAD;AAAc,UAAA,KAAK,EAAEG,MAAM,CAACC,YAA5B;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA,sBACE,KAAC,IAAD;AACE,cAAA,KAAK,GAAG,CAACF,MAAM,CAACG,aAAR,GAAwB;AAAEJ,gBAAAA,SAAS,EAATA;AAAF,eAA3B,CADP;AAEE,cAAA,QAAQ,EAAE,KAAKZ,QAFjB;AAAA,wBAIE,KAAC,UAAD;AAAA,0BAAaW;AAAb;AAJF;AADF;AADF;AANF,SADF;AAmBD;;;;EAnCuBjB,S;;AAsC1B,IAAMmB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,YAAY,EAAE;AAAEK,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,eAAe,EAAE;AAA5B,GADiB;AAE/BL,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETE,IAAAA,aAAa,EAAE;AAFN,GAFoB;AAM/BL,EAAAA,aAAa,EAAE;AAAEI,IAAAA,eAAe,EAAE;AAAnB;AANgB,CAAlB,CAAf;AASAtB,WAAW,CAACwB,YAAZ,GAA2B;AACzBZ,EAAAA,UAAU,EAAE,EADa;AAEzBD,EAAAA,SAAS,EAAE;AAFc,CAA3B;AAKAX,WAAW,CAACyB,SAAZ,GAAwB;AACtBb,EAAAA,UAAU,EAAEd,SAAS,CAAC4B,MADA;AAEtBf,EAAAA,SAAS,EAAEb,SAAS,CAAC6B;AAFC,CAAxB;AAKA,SAAS3B,WAAT;AAEA,eAAeH,SAAS,CAACG,WAAD,EAAc,aAAd,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Modal,\n  SafeAreaView,\n  View,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { withTheme } from '../config';\nimport PropTypes from 'prop-types';\n\nconst MAX_HEIGHT = 300;\n\nclass BottomSheet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listHeight: undefined,\n    };\n  }\n\n  onLayout = (event) =>\n    this.setState({ listHeight: event.nativeEvent.layout.height });\n\n  render() {\n    const { listHeight } = this.state;\n    const { isVisible, modalProps, children } = this.props;\n    const maxHeight = listHeight < MAX_HEIGHT ? listHeight : MAX_HEIGHT;\n\n    return (\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={isVisible}\n        {...modalProps}\n      >\n        <SafeAreaView style={styles.safeAreaView}>\n          <View style={styles.modalView}>\n            <View\n              style={([styles.listContainer], { maxHeight })}\n              onLayout={this.onLayout}\n            >\n              <ScrollView>{children}</ScrollView>\n            </View>\n          </View>\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeAreaView: { flex: 1, backgroundColor: 'rgba(0,0,0,0.2)' },\n  modalView: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  listContainer: { backgroundColor: 'white' },\n});\n\nBottomSheet.defaultProps = {\n  modalProps: {},\n  isVisible: false,\n};\n\nBottomSheet.propTypes = {\n  modalProps: PropTypes.object,\n  isVisible: PropTypes.bool,\n};\n\nexport { BottomSheet };\n\nexport default withTheme(BottomSheet, 'BottomSheet');\n"]},"metadata":{},"sourceType":"module"}