{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Loader from \"../ui/loader\";\nimport { ListItem } from \"react-native-elements\";\nimport { CustomStatusBar } from \"../ui/custom.status.bar\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { DiagnosisContext } from \"../providers/Diagnosis\";\nimport { COLORS, DIMENS } from \"../constants/styles\";\nimport CustomHeader from \"../parts/custom-header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Diagnose = function Diagnose(_ref) {\n  var navigation = _ref.navigation;\n  var diagnosesContext = React.useContext(DiagnosisContext);\n  var diagnoses = diagnosesContext.diagnoses;\n\n  var _React$useState = React.useState({\n    isLoading: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _keyExtractor = function _keyExtractor(item, index) {\n    return index.toString();\n  };\n\n  var _renderItem = function _renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"ViewDiagnosis\", item);\n      },\n      children: _jsxs(ListItem, {\n        bottomDivider: true,\n        children: [item.gender == \"Female\" ? item.isPregnant ? _jsx(Icon, {\n          name: \"check-circle\",\n          color: COLORS.PRIMARY,\n          size: 20\n        }) : _jsx(Icon, {\n          name: \"minus-circle\",\n          color: COLORS.GREY,\n          SIZE: 25\n        }) : _jsx(Icon, {\n          name: \"circle\",\n          color: COLORS.GREY,\n          SIZE: 25\n        }), _jsxs(ListItem.Content, {\n          children: [_jsx(ListItem.Title, {\n            style: STYLES.listTitle,\n            children: item.code\n          }), _jsx(ListItem.Subtitle, {\n            style: STYLES.subtitle,\n            children: _jsxs(Text, {\n              children: [\"Age \", item.age_group]\n            })\n          })]\n        }), _jsx(ListItem.Chevron, {\n          size: 30\n        })]\n      })\n    });\n  };\n\n  React.useEffect(function () {\n    getDiagnoses();\n  }, [diagnoses]);\n\n  var getDiagnoses = function getDiagnoses() {\n    var jsonString;\n    return _regeneratorRuntime.async(function getDiagnoses$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@diagnosis\"));\n\n          case 3:\n            jsonString = _context.sent;\n            diagnosesContext.setDiagnoses(jsonString ? JSON.parse(jsonString) : diagnoses);\n            setState(_objectSpread(_objectSpread({}, state), {}, {\n              isLoading: false\n            }));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var _header = function _header() {\n    return _jsx(CustomHeader, {\n      left: _jsx(TouchableOpacity, {\n        style: {\n          marginHorizontal: 4,\n          width: 35,\n          height: 35,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          return navigation.openDrawer();\n        },\n        children: _jsx(Icon, {\n          name: \"menu\",\n          size: 25,\n          color: COLORS.BLACK\n        })\n      }),\n      title: _jsx(Text, {\n        style: [STYLES.centerHeader, STYLES.title],\n        children: \"Diagnoses\"\n      }),\n      right: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"NewDiagnosis\");\n        },\n        style: {\n          marginHorizontal: 4,\n          width: 35,\n          height: 35,\n          borderRadius: 100,\n          backgroundColor: COLORS.BLACK,\n          borderColor: COLORS.BLACK,\n          borderStyle: \"solid\",\n          borderWidth: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(Icon, {\n          name: \"plus\",\n          size: 25,\n          color: COLORS.WHITE\n        })\n      })\n    });\n  };\n\n  if (state.isLoading) {\n    return _jsx(Loader, {});\n  } else {\n    if (typeof diagnoses === \"object\" && diagnoses.length == 0) return _jsxs(View, {\n      style: STYLES.wrapper,\n      children: [_jsx(CustomStatusBar, {}), _header(), _jsxs(View, {\n        style: STYLES.body,\n        children: [_jsx(Icon, {\n          name: \"smile\",\n          size: 60,\n          color: COLORS.GREY\n        }), _jsx(Text, {\n          style: STYLES.alert,\n          children: \"You don't have Diagnosis info yet.\"\n        })]\n      })]\n    });\n    return _jsxs(View, {\n      style: STYLES.wrapper,\n      children: [_jsx(CustomStatusBar, {}), _header(), _jsx(FlatList, {\n        data: diagnoses,\n        renderItem: _renderItem,\n        keyExtractor: _keyExtractor\n      })]\n    });\n  }\n};\n\nvar STYLES = StyleSheet.create({\n  wrapper: {\n    flex: 1,\n    backgroundColor: COLORS.SECONDARY\n  },\n  header: {\n    flex: 1\n  },\n  body: {\n    flex: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    color: COLORS.SECONDARY,\n    textAlign: \"center\"\n  },\n  alert: {\n    color: COLORS.GREY,\n    textAlign: \"center\",\n    marginTop: 15\n  },\n  listTitle: {\n    color: COLORS.BLACK,\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  subtitle: {\n    flexDirection: \"row\"\n  },\n  label: {\n    fontWeight: \"bold\",\n    marginRight: 5\n  },\n  leftHeader: {\n    flex: 1,\n    paddingLeft: 10\n  },\n  centerHeader: {\n    flex: 2,\n    flexDirection: \"row\"\n  },\n  yesText: {\n    color: COLORS.PRIMARY\n  },\n  rightHeader: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  }\n});\nexport default Diagnose;","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/components/screens/diagnosis.js"],"names":["React","Loader","ListItem","CustomStatusBar","Icon","AsyncStorage","DiagnosisContext","COLORS","DIMENS","CustomHeader","Diagnose","navigation","diagnosesContext","useContext","diagnoses","useState","isLoading","state","setState","_keyExtractor","item","index","toString","_renderItem","navigate","gender","isPregnant","PRIMARY","GREY","STYLES","listTitle","code","subtitle","age_group","useEffect","getDiagnoses","getItem","jsonString","setDiagnoses","JSON","parse","_header","marginHorizontal","width","height","justifyContent","alignItems","openDrawer","BLACK","centerHeader","title","borderRadius","backgroundColor","borderColor","borderStyle","borderWidth","WHITE","length","wrapper","body","alert","StyleSheet","create","flex","SECONDARY","header","fontWeight","color","textAlign","marginTop","fontSize","flexDirection","label","marginRight","leftHeader","paddingLeft","yesText","rightHeader"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAUA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,eAAT;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,gBAAT;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,YAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACnC,MAAMC,gBAAgB,GAAGZ,KAAK,CAACa,UAAN,CAAiBP,gBAAjB,CAAzB;AACA,MAAQQ,SAAR,GAAsBF,gBAAtB,CAAQE,SAAR;;AAEA,wBAA0Bd,KAAK,CAACe,QAAN,CAAe;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,KAAP;AAAA,WAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,GAAtB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,QAAc;AAAA,QAAXH,IAAW,SAAXA,IAAW;AAChC,WACE,KAAC,gBAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMT,UAAU,CAACa,QAAX,CAAoB,eAApB,EAAqCJ,IAArC,CAAN;AAAA,OADX;AAAA,gBAGE,MAAC,QAAD;AAAU,QAAA,aAAa,MAAvB;AAAA,mBACGA,IAAI,CAACK,MAAL,IAAe,QAAf,GACCL,IAAI,CAACM,UAAL,GACE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,cAAX;AAA0B,UAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAxC;AAAiD,UAAA,IAAI,EAAE;AAAvD,UADF,GAGE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,cAAX;AAA0B,UAAA,KAAK,EAAEpB,MAAM,CAACqB,IAAxC;AAA8C,UAAA,IAAI,EAAE;AAApD,UAJH,GAOC,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,KAAK,EAAErB,MAAM,CAACqB,IAAlC;AAAwC,UAAA,IAAI,EAAE;AAA9C,UARJ,EAWE,MAAC,QAAD,CAAU,OAAV;AAAA,qBACE,KAAC,QAAD,CAAU,KAAV;AAAgB,YAAA,KAAK,EAAEC,MAAM,CAACC,SAA9B;AAAA,sBACGV,IAAI,CAACW;AADR,YADF,EAKE,KAAC,QAAD,CAAU,QAAV;AAAmB,YAAA,KAAK,EAAEF,MAAM,CAACG,QAAjC;AAAA,sBACE,MAAC,IAAD;AAAA,iCAAWZ,IAAI,CAACa,SAAhB;AAAA;AADF,YALF;AAAA,UAXF,EAoBE,KAAC,QAAD,CAAU,OAAV;AAAkB,UAAA,IAAI,EAAE;AAAxB,UApBF;AAAA;AAHF,MADF;AA4BD,GA7BD;;AA+BAjC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,YAAM;AACpBC,IAAAA,YAAY;AACb,GAFD,EAEG,CAACrB,SAAD,CAFH;;AAIA,MAAMqB,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQ9B,YAAY,CAAC+B,OAAb,CAAqB,YAArB,CAFR;;AAAA;AAEXC,YAAAA,UAFW;AAGjBzB,YAAAA,gBAAgB,CAAC0B,YAAjB,CACED,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAH,GAA4BvB,SADxC;AAGAI,YAAAA,QAAQ,iCAAMD,KAAN;AAAaD,cAAAA,SAAS,EAAE;AAAxB,eAAR;AANiB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAYA,MAAMyB,OAAO,GAAG,SAAVA,OAAU;AAAA,WACd,KAAC,YAAD;AACE,MAAA,IAAI,EACF,KAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,gBAAgB,EAAE,CADb;AAELC,UAAAA,KAAK,EAAE,EAFF;AAGLC,UAAAA,MAAM,EAAE,EAHH;AASLC,UAAAA,cAAc,EAAE,QATX;AAULC,UAAAA,UAAU,EAAE;AAVP,SADT;AAaE,QAAA,OAAO,EAAE;AAAA,iBAAMnC,UAAU,CAACoC,UAAX,EAAN;AAAA,SAbX;AAAA,kBAeE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,IAAI,EAAE,EAAxB;AAA4B,UAAA,KAAK,EAAExC,MAAM,CAACyC;AAA1C;AAfF,QAFJ;AAoBE,MAAA,KAAK,EAAE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACnB,MAAM,CAACoB,YAAR,EAAsBpB,MAAM,CAACqB,KAA7B,CAAb;AAAA;AAAA,QApBT;AAqBE,MAAA,KAAK,EACH,KAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMvC,UAAU,CAACa,QAAX,CAAoB,cAApB,CAAN;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AACLkB,UAAAA,gBAAgB,EAAE,CADb;AAELC,UAAAA,KAAK,EAAE,EAFF;AAGLC,UAAAA,MAAM,EAAE,EAHH;AAILO,UAAAA,YAAY,EAAE,GAJT;AAKLC,UAAAA,eAAe,EAAE7C,MAAM,CAACyC,KALnB;AAMLK,UAAAA,WAAW,EAAE9C,MAAM,CAACyC,KANf;AAOLM,UAAAA,WAAW,EAAE,OAPR;AAQLC,UAAAA,WAAW,EAAE,CARR;AASLV,UAAAA,cAAc,EAAE,QATX;AAULC,UAAAA,UAAU,EAAE;AAVP,SAFT;AAAA,kBAeE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,IAAI,EAAE,EAAxB;AAA4B,UAAA,KAAK,EAAEvC,MAAM,CAACiD;AAA1C;AAfF;AAtBJ,MADc;AAAA,GAAhB;;AA4CA,MAAIvC,KAAK,CAACD,SAAV,EAAqB;AACnB,WAAO,KAAC,MAAD,KAAP;AACD,GAFD,MAEO;AACL,QAAI,OAAOF,SAAP,KAAqB,QAArB,IAAiCA,SAAS,CAAC2C,MAAV,IAAoB,CAAzD,EACE,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE5B,MAAM,CAAC6B,OAApB;AAAA,iBACE,KAAC,eAAD,KADF,EAGGjB,OAAO,EAHV,EAKE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAAC8B,IAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,IAAI,EAAE,EAAzB;AAA6B,UAAA,KAAK,EAAEpD,MAAM,CAACqB;AAA3C,UADF,EAGE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAAC+B,KAApB;AAAA;AAAA,UAHF;AAAA,QALF;AAAA,MADF;AAcF,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE/B,MAAM,CAAC6B,OAApB;AAAA,iBACE,KAAC,eAAD,KADF,EAGGjB,OAAO,EAHV,EAKE,KAAC,QAAD;AACE,QAAA,IAAI,EAAE3B,SADR;AAEE,QAAA,UAAU,EAAES,WAFd;AAGE,QAAA,YAAY,EAAEJ;AAHhB,QALF;AAAA,MADF;AAaD;AACF,CAnID;;AAqIA,IAAMU,MAAM,GAAGgC,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPX,IAAAA,eAAe,EAAE7C,MAAM,CAACyD;AAFjB,GADsB;AAK/BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,IAAI,EAAE;AADA,GALuB;AAQ/BJ,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJlB,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,UAAU,EAAE;AAHR,GARyB;AAa/BI,EAAAA,KAAK,EAAE;AACLgB,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,KAAK,EAAE5D,MAAM,CAACyD,SAFT;AAGLI,IAAAA,SAAS,EAAE;AAHN,GAbwB;AAkB/BR,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE5D,MAAM,CAACqB,IADT;AAELwC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAlBwB;AAuB/BvC,EAAAA,SAAS,EAAE;AACTqC,IAAAA,KAAK,EAAE5D,MAAM,CAACyC,KADL;AAETsB,IAAAA,QAAQ,EAAE,EAFD;AAGTJ,IAAAA,UAAU,EAAE;AAHH,GAvBoB;AA4B/BlC,EAAAA,QAAQ,EAAE;AACRuC,IAAAA,aAAa,EAAE;AADP,GA5BqB;AAgC/BC,EAAAA,KAAK,EAAE;AACLN,IAAAA,UAAU,EAAE,MADP;AAELO,IAAAA,WAAW,EAAE;AAFR,GAhCwB;AAoC/BC,EAAAA,UAAU,EAAE;AACVX,IAAAA,IAAI,EAAE,CADI;AAEVY,IAAAA,WAAW,EAAE;AAFH,GApCmB;AAwC/B1B,EAAAA,YAAY,EAAE;AACZc,IAAAA,IAAI,EAAE,CADM;AAEZQ,IAAAA,aAAa,EAAE;AAFH,GAxCiB;AA4C/BK,EAAAA,OAAO,EAAE;AACPT,IAAAA,KAAK,EAAE5D,MAAM,CAACoB;AADP,GA5CsB;AA+C/BkD,EAAAA,WAAW,EAAE;AACXd,IAAAA,IAAI,EAAE,CADK;AAEXQ,IAAAA,aAAa,EAAE,KAFJ;AAGX1B,IAAAA,cAAc,EAAE;AAHL;AA/CkB,CAAlB,CAAf;AAsDA,eAAenC,QAAf","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n} from \"react-native\";\r\n\r\nimport Loader from \"../ui/loader\";\r\nimport { ListItem } from \"react-native-elements\";\r\nimport { CustomStatusBar } from \"../ui/custom.status.bar\";\r\nimport Icon from \"react-native-vector-icons/Feather\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { DiagnosisContext } from \"../providers/Diagnosis\";\r\n\r\nimport { COLORS, DIMENS } from \"../constants/styles\";\r\n\r\nimport CustomHeader from \"../parts/custom-header\";\r\n\r\nconst Diagnose = ({ navigation }) => {\r\n  const diagnosesContext = React.useContext(DiagnosisContext);\r\n  const { diagnoses } = diagnosesContext;\r\n\r\n  const [state, setState] = React.useState({ isLoading: true });\r\n\r\n  const _keyExtractor = (item, index) => index.toString();\r\n\r\n  const _renderItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate(\"ViewDiagnosis\", item)}\r\n      >\r\n        <ListItem bottomDivider>\r\n          {item.gender == \"Female\" ? (\r\n            item.isPregnant ? (\r\n              <Icon name=\"check-circle\" color={COLORS.PRIMARY} size={20} />\r\n            ) : (\r\n              <Icon name=\"minus-circle\" color={COLORS.GREY} SIZE={25} />\r\n            )\r\n          ) : (\r\n            <Icon name=\"circle\" color={COLORS.GREY} SIZE={25} />\r\n          )}\r\n\r\n          <ListItem.Content>\r\n            <ListItem.Title style={STYLES.listTitle}>\r\n              {item.code}\r\n            </ListItem.Title>\r\n\r\n            <ListItem.Subtitle style={STYLES.subtitle}>\r\n              <Text>Age {item.age_group}</Text>\r\n            </ListItem.Subtitle>\r\n          </ListItem.Content>\r\n          <ListItem.Chevron size={30} />\r\n        </ListItem>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getDiagnoses();\r\n  }, [diagnoses]);\r\n\r\n  const getDiagnoses = async () => {\r\n    try {\r\n      const jsonString = await AsyncStorage.getItem(\"@diagnosis\");\r\n      diagnosesContext.setDiagnoses(\r\n        jsonString ? JSON.parse(jsonString) : diagnoses\r\n      );\r\n      setState({ ...state, isLoading: false });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const _header = () => (\r\n    <CustomHeader\r\n      left={\r\n        <TouchableOpacity\r\n          style={{\r\n            marginHorizontal: 4,\r\n            width: 35,\r\n            height: 35,\r\n            /*                         borderRadius: 100,\r\n                        backgroundColor: COLORS.GREY,\r\n                        borderColor:COLORS.BLACK,\r\n                        borderStyle:'solid',\r\n                        borderWidth:1, */\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onPress={() => navigation.openDrawer()}\r\n        >\r\n          <Icon name=\"menu\" size={25} color={COLORS.BLACK} />\r\n        </TouchableOpacity>\r\n      }\r\n      title={<Text style={[STYLES.centerHeader, STYLES.title]}>Diagnoses</Text>}\r\n      right={\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"NewDiagnosis\")}\r\n          style={{\r\n            marginHorizontal: 4,\r\n            width: 35,\r\n            height: 35,\r\n            borderRadius: 100,\r\n            backgroundColor: COLORS.BLACK,\r\n            borderColor: COLORS.BLACK,\r\n            borderStyle: \"solid\",\r\n            borderWidth: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Icon name=\"plus\" size={25} color={COLORS.WHITE} />\r\n        </TouchableOpacity>\r\n      }\r\n    />\r\n  );\r\n\r\n  if (state.isLoading) {\r\n    return <Loader />;\r\n  } else {\r\n    if (typeof diagnoses === \"object\" && diagnoses.length == 0)\r\n      return (\r\n        <View style={STYLES.wrapper}>\r\n          <CustomStatusBar />\r\n\r\n          {_header()}\r\n\r\n          <View style={STYLES.body}>\r\n            <Icon name=\"smile\" size={60} color={COLORS.GREY} />\r\n\r\n            <Text style={STYLES.alert}>You don't have Diagnosis info yet.</Text>\r\n          </View>\r\n        </View>\r\n      );\r\n\r\n    return (\r\n      <View style={STYLES.wrapper}>\r\n        <CustomStatusBar />\r\n\r\n        {_header()}\r\n\r\n        <FlatList\r\n          data={diagnoses}\r\n          renderItem={_renderItem}\r\n          keyExtractor={_keyExtractor}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst STYLES = StyleSheet.create({\r\n  wrapper: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.SECONDARY,\r\n  },\r\n  header: {\r\n    flex: 1,\r\n  },\r\n  body: {\r\n    flex: 2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    color: COLORS.SECONDARY,\r\n    textAlign: \"center\",\r\n  },\r\n  alert: {\r\n    color: COLORS.GREY,\r\n    textAlign: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  listTitle: {\r\n    color: COLORS.BLACK,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    flexDirection: \"row\",\r\n    // opacity:0.5\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n    marginRight: 5,\r\n  },\r\n  leftHeader: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n  },\r\n  centerHeader: {\r\n    flex: 2,\r\n    flexDirection: \"row\",\r\n  },\r\n  yesText: {\r\n    color: COLORS.PRIMARY,\r\n  },\r\n  rightHeader: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\n\r\nexport default Diagnose;\r\n"]},"metadata":{},"sourceType":"module"}