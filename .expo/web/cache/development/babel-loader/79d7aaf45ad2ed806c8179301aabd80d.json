{"ast":null,"code":"import React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS } from \"../constants/styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CustomHeader = function CustomHeader(props) {\n  var left = props.left,\n      title = props.title,\n      right = props.right;\n\n  if (left && right && title) {\n    return _jsxs(View, {\n      style: [STYLES.wrapper],\n      children: [left, title, right]\n    });\n  } else if (left && title && !right) {\n    return _jsxs(View, {\n      style: [STYLES.wrapper],\n      children: [left, title]\n    });\n  } else if (left && !title && !right) {\n    return _jsx(View, {\n      style: [STYLES.wrapper],\n      children: left\n    });\n  } else if (!left && title && !right) {\n    return _jsx(View, {\n      style: [STYLES.wrapper],\n      children: title\n    });\n  } else if (!left && !title && right) {\n    return _jsx(View, {\n      style: [STYLES.wrapper, STYLES.right],\n      children: right\n    });\n  }\n\n  return _jsx(View, {\n    style: [STYLES.wrapper],\n    children: _jsx(View, {})\n  });\n};\n\nvar STYLES = StyleSheet.create({\n  wrapper: {\n    backgroundColor: COLORS.WHITE,\n    flexDirection: 'row',\n    paddingTop: 5,\n    paddingBottom: 5,\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderStyle: 'solid',\n    borderBottomColor: COLORS.GREY\n  },\n  rightAlign: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default CustomHeader;","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/components/ui/custom-header.js"],"names":["React","Component","COLORS","CustomHeader","props","left","title","right","STYLES","wrapper","StyleSheet","create","backgroundColor","WHITE","flexDirection","paddingTop","paddingBottom","alignItems","borderBottomWidth","borderStyle","borderBottomColor","GREY","rightAlign","justifyContent"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAAQC,MAAR;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE5B,MAAOC,IAAP,GAA4BD,KAA5B,CAAOC,IAAP;AAAA,MAAYC,KAAZ,GAA4BF,KAA5B,CAAYE,KAAZ;AAAA,MAAmBC,KAAnB,GAA4BH,KAA5B,CAAmBG,KAAnB;;AAEA,MAAGF,IAAI,IAAIE,KAAR,IAAiBD,KAApB,EAA2B;AACzB,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACE,MAAM,CAACC,OAAR,CAAb;AAAA,iBACGJ,IADH,EAEGC,KAFH,EAGGC,KAHH;AAAA,MADF;AAQD,GATD,MASO,IAAGF,IAAI,IAAIC,KAAR,IAAiB,CAACC,KAArB,EAA6B;AAElC,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,CAAb;AAAA,iBACGJ,IADH,EAEGC,KAFH;AAAA,MADF;AAOD,GATM,MASA,IAAGD,IAAI,IAAI,CAACC,KAAT,IAAkB,CAACC,KAAtB,EAA8B;AAEnC,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,CAAb;AAAA,gBACGJ;AADH,MADF;AAKD,GAPM,MAOA,IAAG,CAACA,IAAD,IAASC,KAAT,IAAkB,CAACC,KAAtB,EAA8B;AAEjC,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,CAAb;AAAA,gBACGH;AADH,MADF;AAMH,GARM,MAQA,IAAG,CAACD,IAAD,IAAS,CAACC,KAAV,IAAmBC,KAAtB,EAA8B;AACnC,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CACXC,MAAM,CAACC,OADI,EAEXD,MAAM,CAACD,KAFI,CAAb;AAAA,gBAIGA;AAJH,MADF;AASH;;AAED,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,OAAR,CAAb;AAAA,cACE,KAAC,IAAD;AADF,IADF;AAKD,CAtDD;;AAwDA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,eAAe,EAAEV,MAAM,CAACW,KADjB;AAEPC,IAAAA,aAAa,EAAC,KAFP;AAGPC,IAAAA,UAAU,EAAC,CAHJ;AAIPC,IAAAA,aAAa,EAAC,CAJP;AAKPC,IAAAA,UAAU,EAAC,QALJ;AAMPC,IAAAA,iBAAiB,EAAE,CANZ;AAOPC,IAAAA,WAAW,EAAE,OAPN;AAQPC,IAAAA,iBAAiB,EAAElB,MAAM,CAACmB;AARnB,GADoB;AAW7BC,EAAAA,UAAU,EAAG;AACXC,IAAAA,cAAc,EAAC;AADJ;AAXgB,CAAlB,CAAf;AAgBA,eAAepB,YAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport {COLORS} from '../constants/styles'\n\nconst CustomHeader = (props) => {\n\n    const {left,title, right} = props\n\n    if(left && right && title) {\n      return (\n        <View style={[STYLES.wrapper]}>\n          {left}\n          {title}\n          {right}\n        </View>\n      )\n\n    } else if(left && title && !right ) {\n\n      return (\n        <View style={[STYLES.wrapper]}>\n          {left}\n          {title}\n        </View>\n      )\n\n    } else if(left && !title && !right ) {\n\n      return (\n        <View style={[STYLES.wrapper]}>\n          {left}\n        </View>\n      ) \n    } else if(!left && title && !right ) {\n\n        return (\n          <View style={[STYLES.wrapper]}>\n            {title}\n          </View>\n        )\n\n    } else if(!left && !title && right ) {\n      return (\n        <View style={[\n          STYLES.wrapper,\n          STYLES.right\n        ]}>\n          {right}\n        </View>\n      )\n\n  }\n\n  return (\n    <View style={[STYLES.wrapper]}>\n      <View></View>\n    </View> \n  )\n}\n\nconst STYLES = StyleSheet.create({\n    wrapper: {\n      backgroundColor: COLORS.WHITE,\n      flexDirection:'row',\n      paddingTop:5,\n      paddingBottom:5,\n      alignItems:'center',\n      borderBottomWidth: 1,\n      borderStyle: 'solid',\n      borderBottomColor: COLORS.GREY\n    },\n    rightAlign : {\n      justifyContent:'flex-end'\n    }\n})\n\nexport default CustomHeader;"]},"metadata":{},"sourceType":"module"}