{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { COLORS, DIMENS } from \"../constants/styles\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport AuthContext from \"../contexts/auth\";\nimport { UserContext } from \"../providers/User\";\nimport Dashboard from \"../screens/dashboard\";\nimport Chats from \"../screens/Chats\";\nimport Login from \"../screens/login\";\nimport SignUp from \"../screens/signup\";\nimport PasswordReset from \"../screens/password.reset\";\nimport About from \"../screens/about\";\nimport Covid19 from \"../screens/covid19\";\nimport News from \"../screens/news\";\nimport Maternal from \"../screens/maternal\";\nimport GetStarted from \"../screens/get.started\";\nimport General from \"../screens/general\";\nimport Tips from \"../screens/tips\";\nimport Diagnose from \"../screens/diagnosis\";\nimport Doctors from \"../screens/doctors\";\nimport { acc } from 'react-native-reanimated';\nimport Ambulance from \"../screens/ambulance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nexport var CustomDrawerContent = function CustomDrawerContent(props) {\n  var _React$useContext = React.useContext(UserContext),\n      accessToken = _React$useContext.accessToken;\n\n  React.useEffect(function () {}, []);\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsxs(View, {\n      style: styles.DrawerHeader,\n      children: [_jsx(Image, {\n        source: require(\"../imgs/logo.png\"),\n        style: styles.DrawerHeaderIcon\n      }), _jsx(Text, {\n        style: styles.DrawerHeaderText\n      })]\n    }), _jsx(DrawerItemList, _objectSpread({}, props)), props.children]\n  }));\n};\nexport var DrawerNavigation = function DrawerNavigation() {\n  var _React$useContext2 = React.useContext(UserContext),\n      accessToken = _React$useContext2.accessToken;\n\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Dashboard\",\n    drawerContentOptions: {\n      itemsContainerStyle: {\n        marginVertical: 0\n      },\n      activeTintColor: COLORS.WHITE,\n      inactiveTintColor: COLORS.WHITE,\n      activeBackgroundColor: COLORS.ACCENT_1,\n      itemStyle: {\n        marginHorizontal: 0,\n        borderRadius: 0\n      }\n    },\n    drawerType: 'slide',\n    hideStatusBar: 'true',\n    drawerStyle: {\n      backgroundColor: COLORS.PRIMARY,\n      width: 240\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Dashboard\",\n      component: Dashboard\n    }), _jsx(Drawer.Screen, {\n      name: \"Covid\",\n      component: Covid19\n    }), _jsx(Drawer.Screen, {\n      name: \"News\",\n      component: News\n    }), _jsx(Drawer.Screen, {\n      name: \"Maternal\",\n      component: Maternal\n    }), _jsx(Drawer.Screen, {\n      name: \"Health Tips\",\n      component: Tips\n    }), _jsx(Drawer.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        headerShown: false,\n        swipeEnabled: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"About\",\n      component: About\n    })]\n  });\n};\nexport var DrawerNavigationLogged = function DrawerNavigationLogged() {\n  var _React$useContext3 = React.useContext(AuthContext),\n      signOut = _React$useContext3.signOut;\n\n  var _React$useContext4 = React.useContext(UserContext),\n      accessToken = _React$useContext4.accessToken;\n\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"Dashboard\",\n    drawerContentOptions: {\n      itemsContainerStyle: {\n        marginVertical: 0\n      },\n      activeTintColor: COLORS.WHITE,\n      inactiveTintColor: COLORS.WHITE,\n      activeBackgroundColor: COLORS.ACCENT_1,\n      itemStyle: {\n        marginHorizontal: 0,\n        borderRadius: 0\n      }\n    },\n    drawerType: 'slide',\n    hideStatusBar: 'true',\n    drawerStyle: {\n      backgroundColor: COLORS.PRIMARY,\n      width: 240\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread(_objectSpread({}, props), {}, {\n        children: _jsx(DrawerItem, {\n          label: \"Sign out\",\n          onPress: signOut,\n          inactiveBackgroundColor: COLORS.WHITE_LOW\n        })\n      }));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Dashboard\",\n      component: Dashboard\n    }), _jsx(Drawer.Screen, {\n      name: \"Messages\",\n      component: Chats\n    }), _jsx(Drawer.Screen, {\n      name: \"Diagnose\",\n      component: Diagnose\n    }), _jsx(Drawer.Screen, {\n      name: \"Doctors\",\n      component: Doctors\n    }), _jsx(Drawer.Screen, {\n      name: \"Ambulance\",\n      component: Ambulance\n    }), _jsx(Drawer.Screen, {\n      name: \"Help\",\n      component: GetStarted\n    }), _jsx(Drawer.Screen, {\n      name: \"About\",\n      component: About\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  DrawerHeader: {\n    backgroundColor: COLORS.PRIMARY,\n    padding: DIMENS.PADDING,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  DrawerHeaderIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 10\n  },\n  DrawerHeaderText: {\n    color: COLORS.WHITE,\n    fontWeight: 'bold',\n    paddingLeft: DIMENS.PADDING\n  }\n});","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/components/helpers/navigations.js"],"names":["React","Icon","COLORS","DIMENS","NavigationContainer","createStackNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","AuthContext","UserContext","Dashboard","Chats","Login","SignUp","PasswordReset","About","Covid19","News","Maternal","GetStarted","General","Tips","Diagnose","Doctors","acc","Ambulance","Stack","Drawer","CustomDrawerContent","props","useContext","accessToken","useEffect","styles","DrawerHeader","require","DrawerHeaderIcon","DrawerHeaderText","children","DrawerNavigation","itemsContainerStyle","marginVertical","activeTintColor","WHITE","inactiveTintColor","activeBackgroundColor","ACCENT_1","itemStyle","marginHorizontal","borderRadius","backgroundColor","PRIMARY","width","headerShown","swipeEnabled","DrawerNavigationLogged","signOut","WHITE_LOW","StyleSheet","create","padding","PADDING","flexDirection","justifyContent","alignItems","height","color","fontWeight","paddingLeft"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport * as React from 'react'\nimport {\n    View, \n    Image,\n    TouchableOpacity,\n    StyleSheet,\n    Text\n} from 'react-native'\n\nimport Icon from 'react-native-vector-icons/Feather'\n\nimport {COLORS, DIMENS} from '../constants/styles'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { \n    createDrawerNavigator,\n    DrawerContentScrollView,\n    DrawerItemList,\n    DrawerItem \n} from '@react-navigation/drawer'\n\nimport AuthContext from '../contexts/auth'\nimport {UserContext} from '../providers/User'\nimport Dashboard from '../screens/dashboard'\nimport Chats from '../screens/Chats'\nimport Login from '../screens/login'\nimport SignUp from '../screens/signup'\nimport PasswordReset from '../screens/password.reset'\nimport About from '../screens/about'\nimport Covid19 from '../screens/covid19'\nimport News from '../screens/news'\nimport Maternal from '../screens/maternal'\nimport GetStarted from '../screens/get.started'\nimport General from '../screens/general'\nimport Tips from '../screens/tips'\nimport Diagnose from '../screens/diagnosis'\n\nimport Doctors from '../screens/doctors'\nimport { acc } from 'react-native-reanimated'\nimport Ambulance from '../screens/ambulance'\n\nconst Stack = createStackNavigator()\nconst Drawer = createDrawerNavigator()\n\nexport const CustomDrawerContent = (props) => {\n    const {accessToken} = React.useContext(UserContext)\n\n    React.useEffect(()=> {\n        // console.log('Drawer header')\n        // console.log(userDetail)\n    },[])\n\n    return (\n      <DrawerContentScrollView {...props}>\n        <View style={styles.DrawerHeader}>\n            <Image \n                source={require('../imgs/logo.png')}\n                style={styles.DrawerHeaderIcon}\n            />\n            <Text style={styles.DrawerHeaderText}></Text>\n        </View>\n        <DrawerItemList {...props} />\n        {props.children}\n      </DrawerContentScrollView>\n    )\n}\n\nexport const DrawerNavigation = () => {\n    const {accessToken} = React.useContext(UserContext)\n\n    return (\n        <Drawer.Navigator initialRouteName=\"Dashboard\"\n            drawerContentOptions={{\n                itemsContainerStyle: {\n                    marginVertical: 0,\n                },\n                activeTintColor: COLORS.WHITE,\n                inactiveTintColor: COLORS.WHITE,\n                activeBackgroundColor: COLORS.ACCENT_1,\n                itemStyle: {\n                    marginHorizontal: 0,\n                    // padding: DIMENS.PADDING,\n                    borderRadius: 0\n                }\n            }}\n            drawerType={'slide'}\n            hideStatusBar={'true'}\n            drawerStyle={{\n                backgroundColor: COLORS.PRIMARY,\n                width: 240,\n            }}\n\n            drawerContent={ props => \n                <CustomDrawerContent {...props} />\n            }\n        >\n            <Drawer.Screen name=\"Dashboard\" component={Dashboard} />\n            <Drawer.Screen name=\"Covid\" component={Covid19} />\n            <Drawer.Screen name=\"News\" component={News} />\n            <Drawer.Screen name=\"Maternal\" component={Maternal} />\n            <Drawer.Screen name=\"Health Tips\" component={Tips} />\n            <Drawer.Screen \n                name=\"Login\"\n                component={Login}\n                options={{headerShown: false, swipeEnabled: false }}\n            />\n            <Drawer.Screen name=\"About\" component={About} />\n        </Drawer.Navigator>\n    )\n}\n\nexport const DrawerNavigationLogged = () => {\n    \n    const {signOut} = React.useContext(AuthContext)\n    const {accessToken} = React.useContext(UserContext)\n\n    return (\n        <Drawer.Navigator initialRouteName=\"Dashboard\"\n            drawerContentOptions={{\n                itemsContainerStyle: {\n                    marginVertical: 0,\n                },\n                activeTintColor: COLORS.WHITE,\n                inactiveTintColor: COLORS.WHITE,\n                activeBackgroundColor: COLORS.ACCENT_1,\n                itemStyle: {\n                    marginHorizontal: 0,\n                    // padding: DIMENS.PADDING,\n                    borderRadius: 0\n                }\n            }}\n            drawerType={'slide'}\n            hideStatusBar={'true'}\n            drawerStyle={{\n                backgroundColor: COLORS.PRIMARY,\n                width: 240,\n            }}\n\n            drawerContent={ props => \n                <CustomDrawerContent {...props} >\n                    <DrawerItem label=\"Sign out\" onPress={signOut} inactiveBackgroundColor={COLORS.WHITE_LOW}/>\n                </CustomDrawerContent>\n            }\n        >\n            <Drawer.Screen name=\"Dashboard\" component={Dashboard} />\n            <Drawer.Screen name=\"Messages\" component={Chats} />\n            <Drawer.Screen name=\"Diagnose\" component={Diagnose} />\n            <Drawer.Screen name=\"Doctors\" component={Doctors} />\n            <Drawer.Screen name=\"Ambulance\" component={Ambulance} />\n            <Drawer.Screen name=\"Help\" component={GetStarted} />\n            <Drawer.Screen name=\"About\" component={About} />\n        </Drawer.Navigator>\n    )\n}\n\nconst styles = StyleSheet.create({\n    DrawerHeader: {\n        backgroundColor: COLORS.PRIMARY,\n        padding: DIMENS.PADDING,\n        flexDirection:'row',\n        justifyContent:'flex-start',\n        alignItems:'center'\n    },\n    DrawerHeaderIcon: {\n        width: 50,\n        height: 50,\n        borderRadius: 10,\n\n    },\n    DrawerHeaderText: {\n        color: COLORS.WHITE,\n        fontWeight: 'bold',\n        paddingLeft: DIMENS.PADDING\n    }\n})"]},"metadata":{},"sourceType":"module"}