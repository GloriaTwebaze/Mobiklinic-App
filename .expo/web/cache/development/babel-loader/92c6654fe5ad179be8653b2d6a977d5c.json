{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { COLORS, DIMENS } from \"../constants/styles\";\nimport SignUp from \"./signup\";\nimport AuthContext from \"../contexts/auth\";\nimport { CustomStatusBar } from \"../ui/custom.status.bar\";\nimport Loader from \"../ui/loader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    username: '',\n    password: ''\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  if (loading) return _jsx(Loader, {});\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(CustomStatusBar, {}), _jsxs(View, {\n      style: styles.logoContainer,\n      children: [_jsx(Image, {\n        style: {\n          width: 80,\n          height: 80\n        },\n        source: require(\"../imgs/logo.png\")\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Sign in\"\n      })]\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        autoCorrect: false,\n        placeholderTextColor: \"grey\",\n        selectionColor: COLORS.SECONDARY,\n        onChangeText: function onChangeText(text) {\n          return setUser(_objectSpread(_objectSpread({}, user), {}, {\n            username: text\n          }));\n        },\n        value: user.username,\n        placeholder: \"Phone number e.g: 256778xxxxxx\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        password: true,\n        secureTextEntry: true,\n        autoCorrect: false,\n        placeholderTextColor: \"grey\",\n        selectionColor: COLORS.SECONDARY,\n        onChangeText: function onChangeText(text) {\n          return setUser(_objectSpread(_objectSpread({}, user), {}, {\n            password: text\n          }));\n        },\n        value: user.password,\n        placeholder: \"Password\"\n      }), user.username != '' && user.password != '' ? _jsxs(TouchableOpacity, {\n        style: [styles.btn, styles.btnPrimary],\n        onPress: function onPress() {\n          setLoading(true);\n          signIn({\n            user: user,\n            setLoading: setLoading\n          });\n        },\n        children: [_jsx(Text, {\n          style: styles.whiteText,\n          children: \"Sign in\"\n        }), _jsx(Icon, {\n          name: \"arrow-right\",\n          size: 20,\n          strokeSize: 3,\n          color: COLORS.WHITE\n        })]\n      }) : _jsxs(TouchableOpacity, {\n        style: [styles.btn, styles.btnInfo],\n        children: [_jsx(Text, {\n          style: styles.muteText,\n          children: \"Sign in\"\n        }), _jsx(Icon, {\n          name: \"arrow-right\",\n          size: 20,\n          strokeSize: 5,\n          color: COLORS.WHITE_LOW\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.WHITE\n  },\n  logoContainer: {\n    flexGrow: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: DIMENS.FORM.PADDING\n  },\n  title: {\n    color: COLORS.ACCENT_1,\n    fontSize: 14,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    padding: DIMENS.PADDING\n  },\n  subTitle: {\n    color: COLORS.SECONDARY,\n    fontWeight: 'bold',\n    paddingVertical: 20\n  },\n  textColor: {\n    color: COLORS.WHITE_LOW\n  },\n  linkItem: {\n    paddingTop: DIMENS.PADDING,\n    textAlign: 'center'\n  },\n  formContainer: {\n    flexGrow: 1,\n    padding: DIMENS.FORM.PADDING,\n    justifyContent: 'center',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    backgroundColor: COLORS.PRIMARY\n  },\n  input: {\n    backgroundColor: COLORS.WHITE_LOW,\n    borderColor: COLORS.WHITE_LOW,\n    borderRadius: 50,\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginBottom: 10,\n    fontFamily: 'Roboto'\n  },\n  btn: {\n    padding: DIMENS.PADDING\n  },\n  errorMsg: {\n    color: COLORS.ERRORS\n  },\n  btn: {\n    padding: DIMENS.PADDING,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderRadius: 50,\n    paddingHorizontal: 15\n  },\n  btnInfo: {\n    backgroundColor: COLORS.WHITE_LOW\n  },\n  btnPrimary: {\n    backgroundColor: COLORS.ACCENT_1\n  },\n  submitText: {\n    color: COLORS.ACCENT_1,\n    fontWeight: 'bold'\n  },\n  muteText: {\n    color: COLORS.WHITE_LOW\n  },\n  whiteText: {\n    color: COLORS.WHITE\n  }\n});","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/components/screens/login.js"],"names":["React","Icon","COLORS","DIMENS","SignUp","AuthContext","CustomStatusBar","Loader","Login","useContext","signIn","useState","loading","setLoading","username","password","user","setUser","styles","container","logoContainer","width","height","require","title","formContainer","input","SECONDARY","text","btn","btnPrimary","whiteText","WHITE","btnInfo","muteText","WHITE_LOW","StyleSheet","create","flex","backgroundColor","flexGrow","alignItems","justifyContent","padding","FORM","PADDING","color","ACCENT_1","fontSize","fontWeight","textTransform","subTitle","paddingVertical","textColor","linkItem","paddingTop","textAlign","borderTopLeftRadius","borderTopRightRadius","PRIMARY","borderColor","borderRadius","paddingHorizontal","marginBottom","fontFamily","errorMsg","ERRORS","flexDirection","submitText"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport {\n\tView,\n\tImage,\n\tAlert,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tTouchableOpacity\n} from 'react-native'\n\nimport Icon from 'react-native-vector-icons/Feather'\nimport {\n\tCOLORS,\n\tDIMENS\n} from '../constants/styles'\nimport SignUp from './signup'\n\nimport AuthContext from '../contexts/auth'\nimport { CustomStatusBar } from '../ui/custom.status.bar'\nimport Loader from '../ui/loader'\n\nconst Login = () => {\n\n\tconst {signIn} = React.useContext(AuthContext)\n\tconst [loading, setLoading] = React.useState(false)\n\tconst [user, setUser] = React.useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t})\n\n\tif (loading)\n\t\treturn <Loader />\n\t\n\treturn(\n\t\t<View style={styles.container}>\n\t\t\t<CustomStatusBar/>\n\n\t\t\t<View style={styles.logoContainer}>\n\t\t\t\t<Image \n\t\t\t\t\tstyle={{width: 80, height: 80}}\n\t\t\t\t\tsource={require('../imgs/logo.png')}\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.title}>Sign in</Text>\n\t\t\t</View>\n\t\t\t\t<View style={styles.formContainer}>\n\t\t\t\t\t\n\t\t\t\t\t<TextInput style={styles.input}\n\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\tplaceholderTextColor='grey'\n\t\t\t\t\t\t// keyboardType={'phone-pad'}\n\t\t\t\t\t\tselectionColor={COLORS.SECONDARY}\n\t\t\t\t\t\tonChangeText={ text => setUser({...user, username: text} )}\n\t\t\t\t\t\tvalue={user.username}\n\t\t\t\t\t\tplaceholder='Phone number e.g: 256778xxxxxx'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<TextInput style={styles.input}\n\t\t\t\t\t\tpassword={true}\n\t\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\tplaceholderTextColor='grey'\n\t\t\t\t\t\tselectionColor={COLORS.SECONDARY}\n\t\t\t\t\t\tonChangeText={ text => setUser({...user, password: text} )}\n\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t/>\n\n\t\t\t\t\t{\n\t\t\t\t\t\tuser.username != '' && user.password != ''\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={[styles.btn, styles.btnPrimary]}\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tsetLoading(true)\n\t\t\t\t\t\t\t\tsignIn({ user,setLoading })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.whiteText}>Sign in</Text>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tname=\"arrow-right\"\n\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\tstrokeSize={3}\n\t\t\t\t\t\t\t\tcolor={COLORS.WHITE}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TouchableOpacity style={[styles.btn, styles.btnInfo]}>\n\t\t\t\t\t\t\t<Text style={styles.muteText}>Sign in</Text>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tname=\"arrow-right\"\n\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\tstrokeSize={5}\n\t\t\t\t\t\t\t\tcolor={COLORS.WHITE_LOW}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/*<TouchableOpacity\n\t\t\t\t\t\tonPress={ () => this.setState({toSignUp:true})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={[styles.textColor,styles.linkItem]}>or, sign up</Text>\n\t\t\t\t\t</TouchableOpacity> */}\n\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t\n\t\t)\n\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex:1,\n\t\tbackgroundColor:COLORS.WHITE,\n\t},\n\tlogoContainer: {\n\t\tflexGrow:2,\n\t\talignItems:'center',\n\t\tjustifyContent:'center',\n\t\tpadding: DIMENS.FORM.PADDING\n\t},\n\ttitle:{\n\t\tcolor: COLORS.ACCENT_1,\n\t\tfontSize: 14,\n\t\tfontWeight: 'bold',\n\t\ttextTransform: 'uppercase',\n\t\tpadding: DIMENS.PADDING\n\t},\n\tsubTitle:{\n\t\tcolor: COLORS.SECONDARY,\n\t\tfontWeight:'bold',\n\t\tpaddingVertical:20\n\t},\n\ttextColor:{\n\t\tcolor: COLORS.WHITE_LOW\n\t},\n\tlinkItem:{\n\t\tpaddingTop: DIMENS.PADDING,\n\t\ttextAlign:'center'\n\t},\n\tformContainer:{\n\t\tflexGrow: 1,\n\t\tpadding: DIMENS.FORM.PADDING,\n\t\tjustifyContent:'center',\n\t\tborderTopLeftRadius: 30,\n\t\tborderTopRightRadius: 30,\n\t\tbackgroundColor: COLORS.PRIMARY\n\t},\n\tinput: {\n\t\tbackgroundColor:COLORS.WHITE_LOW,\n\t\t// borderStyle: 'solid',\n\t\t// borderWidth: 2,\n\t\tborderColor: COLORS.WHITE_LOW,\n\t\tborderRadius: 50,\n\t\tpaddingHorizontal: 15,\n\t\tpaddingVertical: 5,\n\t\tmarginBottom: 10,\n\t\tfontFamily:'Roboto',\n\t},\n\tbtn:{\n\t\tpadding: DIMENS.PADDING,\n\t},\n\terrorMsg:{\n\t\tcolor: COLORS.ERRORS\n\t},\n\tbtn :{\n\t\tpadding: DIMENS.PADDING,\n\t\tflexDirection:'row',\n\t\tjustifyContent:'space-between',\n\t\talignItems:'center',\n\t\tborderRadius: 50,\n\t\tpaddingHorizontal:15\n\t},\n\tbtnInfo: {\n\t\tbackgroundColor: COLORS.WHITE_LOW,\n\t},\n\tbtnPrimary:{\n\t\tbackgroundColor: COLORS.ACCENT_1,\n\t},\n\tsubmitText:{\n\t\tcolor: COLORS.ACCENT_1,\n\t\tfontWeight:'bold'\n\t},\n\tmuteText: {\n\t\tcolor: COLORS.WHITE_LOW\n\t},\n\twhiteText: {\n\t\tcolor: COLORS.WHITE\n\t}\n})"]},"metadata":{},"sourceType":"module"}