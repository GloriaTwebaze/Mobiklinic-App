{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { URLS } from \"../constants/API\";\nexport var _removeStorageItem = function _removeStorageItem(key) {\n  return _regeneratorRuntime.async(function _removeStorageItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var generateRandomCode = function generateRandomCode(length) {\n  var USABLE_CHARACTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".split(\"\");\n  return new Array(length).fill(null).map(function () {\n    return USABLE_CHARACTERS[Math.floor(Math.random() * USABLE_CHARACTERS.length)];\n  }).join(\"\");\n};\nexport var MyDate = function MyDate() {\n  var myDate = new Date();\n  return myDate.getMonth() + 1 + \"-\" + myDate.getDate() + \"-\" + myDate.getFullYear() + \" \" + myDate.getHours() + \":\" + myDate.getMinutes() + \":\" + myDate.getSeconds();\n};\nexport var tokensRefresh = function tokensRefresh() {\n  var Tokens, _JSON$parse, rToken, response, JSON_RESPONSE, accessToken, refreshToken, msg, result;\n\n  return _regeneratorRuntime.async(function tokensRefresh$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"tokens\"));\n\n        case 2:\n          Tokens = _context2.sent;\n          _context2.prev = 3;\n          _JSON$parse = JSON.parse(Tokens), rToken = _JSON$parse.refreshToken;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(fetch(URLS.BASE + \"/tokens/refresh\", {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + rToken,\n              \"Content-type\": \"application/json; charset=UTF-8\",\n              Accept: \"application/json\"\n            }\n          }));\n\n        case 7:\n          response = _context2.sent;\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 10:\n          JSON_RESPONSE = _context2.sent;\n          accessToken = JSON_RESPONSE.accessToken, refreshToken = JSON_RESPONSE.refreshToken, msg = JSON_RESPONSE.msg, result = JSON_RESPONSE.result;\n\n          if (!(result === \"Failure\")) {\n            _context2.next = 14;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", false);\n\n        case 14:\n          if (!(result === \"Success\")) {\n            _context2.next = 16;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", {\n            accessToken: accessToken,\n            refreshToken: refreshToken\n          });\n\n        case 16:\n          _context2.next = 21;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](3);\n          console.error(_context2.t0.message);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[3, 18]], Promise);\n};\nexport var RETRIEVE_LOCAL_USERS = function RETRIEVE_LOCAL_USERS() {\n  var users, theUsers;\n  return _regeneratorRuntime.async(function RETRIEVE_LOCAL_USERS$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@theUsers\"));\n\n        case 3:\n          users = _context3.sent;\n          theUsers = users !== null ? users : null;\n          return _context3.abrupt(\"return\", theUsers);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          new Error(_context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var SAVE_LOCAL_USERS = function SAVE_LOCAL_USERS(username, password) {\n  var users, HASH;\n  return _regeneratorRuntime.async(function SAVE_LOCAL_USERS$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(RETRIEVE_LOCAL_USERS());\n\n        case 3:\n          users = _context4.sent;\n          HASH = cyrb53(password);\n\n          if (!(HASH && users !== null)) {\n            _context4.next = 13;\n            break;\n          }\n\n          console.log(users);\n          users = JSON.parse(users);\n          users.push({\n            username: username,\n            hash: HASH\n          });\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@theUsers\", JSON.stringify(users)));\n\n        case 11:\n          _context4.next = 15;\n          break;\n\n        case 13:\n          _context4.next = 15;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@theUsers\", JSON.stringify([{\n            username: username,\n            hash: HASH\n          }])));\n\n        case 15:\n          _context4.next = 20;\n          break;\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](0);\n          new Error(_context4.t0);\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 17]], Promise);\n};\nexport var cyrb53 = function cyrb53(str) {\n  var seed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var h1 = 0xdeadbeef ^ seed,\n      h2 = 0x41c6ce57 ^ seed;\n\n  for (var i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n\n  h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n  h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n};\nexport var DOWNLOAD = function DOWNLOAD(data) {\n  var items;\n  return _regeneratorRuntime.async(function DOWNLOAD$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          items = [\"doctors\", \"ambulances\", \"diagnosis\", \"messages\"];\n\n          if (!((items == null ? void 0 : items.length) > 0)) {\n            _context5.next = 5;\n            break;\n          }\n\n          items.forEach(function (item) {\n            switch (item) {\n              case \"doctors\":\n                DOWNLOAD(\"ambulances\");\n                break;\n\n              case \"ambulances\":\n                DOWNLOAD(\"diagnosis\");\n                break;\n\n              case \"diagnosis\":\n                DOWNLOAD(\"messages\");\n                break;\n\n              case \"messages\":\n                DOWNLOAD(\"doctors\");\n                break;\n\n              default:\n                DOWNLOAD(\"doctors\");\n                break;\n            }\n          });\n          _context5.next = 6;\n          break;\n\n        case 5:\n          return _context5.abrupt(\"return\", false);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar downloader = function downloader(URL) {\n  return _regeneratorRuntime.async(function downloader$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(fetch());\n\n        case 3:\n          _context6.next = 8;\n          break;\n\n        case 5:\n          _context6.prev = 5;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/components/helpers/functions.js"],"names":["React","AsyncStorage","URLS","_removeStorageItem","key","removeItem","generateRandomCode","length","USABLE_CHARACTERS","split","Array","fill","map","Math","floor","random","join","MyDate","myDate","Date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","tokensRefresh","getItem","Tokens","JSON","parse","rToken","refreshToken","fetch","BASE","method","headers","Authorization","Accept","response","json","JSON_RESPONSE","accessToken","msg","result","console","error","message","RETRIEVE_LOCAL_USERS","users","theUsers","Error","SAVE_LOCAL_USERS","username","password","HASH","cyrb53","log","push","hash","setItem","stringify","str","seed","h1","h2","i","ch","charCodeAt","imul","DOWNLOAD","data","items","forEach","item","downloader","URL"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { URLS } from \"../constants/API\";\n\nexport const _removeStorageItem = async (key) => {\n  return await AsyncStorage.removeItem(key);\n};\n\nexport const generateRandomCode = (length) => {\n  const USABLE_CHARACTERS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".split(\"\");\n\n  return new Array(length)\n    .fill(null)\n    .map(\n      () =>\n        USABLE_CHARACTERS[Math.floor(Math.random() * USABLE_CHARACTERS.length)]\n    )\n    .join(\"\");\n};\n\nexport const MyDate = () => {\n  const myDate = new Date();\n  return `${\n    myDate.getMonth() + 1\n  }-${myDate.getDate()}-${myDate.getFullYear()} ${myDate.getHours()}:${myDate.getMinutes()}:${myDate.getSeconds()}`;\n};\n\nexport const tokensRefresh = async () => {\n  const Tokens = await AsyncStorage.getItem(\"tokens\");\n\n  try {\n    const { refreshToken: rToken } = JSON.parse(Tokens);\n\n    const response = await fetch(`${URLS.BASE}/tokens/refresh`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + rToken,\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        Accept: \"application/json\",\n      },\n    });\n\n    const JSON_RESPONSE = await response.json();\n\n    const { accessToken, refreshToken, msg, result } = JSON_RESPONSE;\n\n    if (result === \"Failure\") return false;\n\n    if (result === \"Success\") {\n      return {\n        accessToken,\n        refreshToken,\n      };\n    }\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const RETRIEVE_LOCAL_USERS = async () => {\n  try {\n    let users = await AsyncStorage.getItem(\"@theUsers\");\n    let theUsers = users !== null ? users : null;\n    return theUsers;\n  } catch (err) {\n    new Error(err);\n  }\n};\nexport const SAVE_LOCAL_USERS = async (username, password) => {\n  try {\n    let users = await RETRIEVE_LOCAL_USERS();\n\n    const HASH = cyrb53(password);\n\n    if (HASH && users !== null) {\n      console.log(users);\n      users = JSON.parse(users);\n      users.push({ username, hash: HASH });\n      await AsyncStorage.setItem(\"@theUsers\", JSON.stringify(users));\n    } else {\n      await AsyncStorage.setItem(\n        \"@theUsers\",\n        JSON.stringify([{ username, hash: HASH }])\n      );\n    }\n  } catch (err) {\n    new Error(err);\n  }\n};\n\nexport const cyrb53 = function (str, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed;\n\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n};\n\nexport const DOWNLOAD = async (data) => {\n  const items = [\"doctors\", \"ambulances\", \"diagnosis\", \"messages\"];\n\n  if (items?.length > 0) {\n    items.forEach((item) => {\n      switch (item) {\n        case \"doctors\":\n          DOWNLOAD(\"ambulances\");\n          break;\n        case \"ambulances\":\n          DOWNLOAD(\"diagnosis\");\n          break;\n        case \"diagnosis\":\n          DOWNLOAD(\"messages\");\n          break;\n        case \"messages\":\n          DOWNLOAD(\"doctors\");\n          break;\n        default:\n          DOWNLOAD(\"doctors\");\n          break;\n      }\n    });\n  } else {\n    return false;\n  }\n};\n\nlet downloader = async (URL) => {\n  try {\n    await fetch();\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}