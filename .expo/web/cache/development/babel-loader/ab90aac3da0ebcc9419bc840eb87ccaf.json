{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withTheme } from \"../config\";\nimport Icon from \"../icons/Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ListItemChevron(_ref) {\n  var containerStyle = _ref.containerStyle,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Icon, _objectSpread({\n    type: Platform.OS === 'ios' ? 'ionicon' : 'material',\n    color: \"#D1D1D6\",\n    name: Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',\n    size: 16,\n    containerStyle: StyleSheet.flatten([{\n      alignSelf: 'center'\n    }, containerStyle])\n  }, props));\n}\n\nexport default withTheme(ListItemChevron, 'ListItemChevron');","map":{"version":3,"sources":["/Users/davidofug/Documents/Apps/mobile-apps/mobiklinic/node_modules/react-native-elements/src/list/ListItemChevron.js"],"names":["React","withTheme","Icon","ListItemChevron","containerStyle","props","Platform","OS","StyleSheet","flatten","alignSelf"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,SAAT;AACA,OAAOC,IAAP;;;AAEA,SAASC,eAAT,OAAuD;AAAA,MAA5BC,cAA4B,QAA5BA,cAA4B;AAAA,MAATC,KAAS;;AACrD,SACE,KAAC,IAAD;AACE,IAAA,IAAI,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,UAD5C;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EACFD,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,mBAAxB,GAA8C,sBAJlD;AAME,IAAA,IAAI,EAAE,EANR;AAOE,IAAA,cAAc,EAAEC,UAAU,CAACC,OAAX,CAAmB,CACjC;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADiC,EAEjCN,cAFiC,CAAnB;AAPlB,KAWMC,KAXN,EADF;AAeD;;AAED,eAAeJ,SAAS,CAACE,eAAD,EAAkB,iBAAlB,CAAxB","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\n\nimport { withTheme } from '../config';\nimport Icon from '../icons/Icon';\n\nfunction ListItemChevron({ containerStyle, ...props }) {\n  return (\n    <Icon\n      type={Platform.OS === 'ios' ? 'ionicon' : 'material'}\n      color=\"#D1D1D6\"\n      name={\n        Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right'\n      }\n      size={16}\n      containerStyle={StyleSheet.flatten([\n        { alignSelf: 'center' },\n        containerStyle,\n      ])}\n      {...props}\n    />\n  );\n}\n\nexport default withTheme(ListItemChevron, 'ListItemChevron');\n"]},"metadata":{},"sourceType":"module"}